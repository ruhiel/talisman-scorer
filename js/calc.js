var rankMap = {
    'S':['超会心','抜刀術【技】','達人芸','匠','心眼','ランナー','集中','攻めの守勢','砲術','貫通弾・貫通矢強化','散弾・拡散矢強化','装填拡張','速射強化','幸運','キノコ大好き','ジャンプ鉄人'],
    'A':['攻撃','フルチャージ','逆恨み','死中に活','火事場力','挑戦者','弱点特攻','見切り','渾身','力の解放','会心撃【属性】','麻痺属性強化','睡眠属性強化','爆破属性強化','業物','剛刃研磨','スタミナ急速回復','弾丸節約','通常弾・連射矢強化','特殊射撃強化','弾道強化','砲弾装填','ガード性能','ガード強化','強化持続','鬼火纏'],
    'B':['逆襲','鈍器使い','抜刀術【力】','火属性攻撃強化','水属性攻撃強化','雷属性攻撃強化','氷属性攻撃強化','龍属性攻撃強化','毒属性強化','KO術','納刀術','高速変形','反動軽減','装填速度','ブレ抑制','防御','精霊の加護','気絶耐性','属性やられ耐性','砥石使用高速化','ひるみ軽減','回避性能','回避距離UP','耳栓','風圧耐性','耐震','早食い','破壊王','広域化','泡沫の舞'],
    'C':['不屈','滑走強化','火耐性','水耐性','雷耐性','氷耐性','龍耐性','毒耐性','麻痺耐性','睡眠耐性','爆破やられ耐性','泥雪耐性','腹減り耐性','体術','壁面移動','体力回復量UP','回復速度','アイテム使用強化','満足感','植生学','地質学','ボマー','剥ぎ取り鉄人','飛び込み','陽動','乗り名人','翔蟲使い','スタミナ奪取','笛吹き名人']
};
var rateMap = {
    'S':[[0.95,0.05],[1]],
    '砲弾装填':[[0.9,0.1],[1]],
    'ガード強化|特殊射撃強化|通常弾・連射矢強化':[[0.6,0.4],[1]],
    'フルチャージ|死中に活|弱点特攻|渾身|会心撃【属性】|麻痺属性強化|睡眠属性強化|爆破属性強化|業物|剛刃研磨|スタミナ急速回復|弾丸節約|弾道強化|強化持続|鬼火纏':[[0.6,0.4],[0.9,0.1]],
    '攻撃|逆恨み|火事場力|挑戦者|見切り|力の解放|ガード性能':[[0.6,0.3,0.1],[0.9,0.1]],
    'ブレ抑制':[[0.7,0.3],[0.8,0.1]],
    '泥雪耐性':[[0.7,0.3],[0.7,0.3]],
    '精霊の加護':[[0.75,0.2,0.05],[0.8,0.2]],
    '鈍器使い|耳栓':[[],[]],
    '火属性攻撃強化|水属性攻撃強化|雷属性攻撃強化|氷属性攻撃強化|龍属性攻撃強化|毒属性強化':[[0.5,0.35,0.15],[0.7,0.3]],
    '防御':[[0.6,0.35,0.05],[0.9,0.05,0.05]],
    '水耐性|雷耐性|氷耐性|龍耐性|毒耐性|麻痺耐性|睡眠耐性|翔蟲使い':[[0.86,0.09,0.05],[0.5,0.45,0.05]],
    '逆襲|抜刀術【力】|納刀術|KO術|気絶耐性|高速変形|反動軽減|装填速度|砥石使用高速化|ひるみ軽減|回避性能|回避距離UP|風圧耐性|耐震|早食い|破壊王|広域化|泡沫の舞':[[0.5,0.45,0.05],[0.75,0.25]],
    '火耐性|爆破やられ耐性|体力回復量UP|回復速度|体術|スタミナ奪取|地質学|ボマー|アイテム使用強化|満足感|腹減り耐性|壁面移動':[[0.5,0.45,0.05],[0.5,0.45,0.05]],
    '植生学':[[0.5,0.35,0.1,0.05],[0.5,0.35,0.1,0.05]]
};

function getSkillRank(skill) {
    for (let key in rankMap) {
        if(rankMap[key].includes(skill)){
            return key;
        }
    }
}

function getSkillRate(skill) {
    var rank = getSkillRank(skill);
    if(rateMap[rank]) {
        return rateMap[rank];
    }

    for (let key in rateMap) {
        if(key.indexOf(skill) > -1){
            return rateMap[key];
        }
    }
}

$(document).ready(function() {
    $('.select2').select2({width: 'resolve'});
    $('.select2').change(function(){
        var idname = $(this).attr('id');
        var skillindexString = idname.replace('skill', '');
        var skillindex = Number(idname.replace('skill', '')) - 1;
        var skillname = $('#' + idname + ' option:selected').text();
        var skillRate = getSkillRate(skillname)[skillindex];

        alert(skillRate);

        $('#skill' + skillindexString + 'lv > option').remove();

        for(var i = 0; i < skillRate.length; i++) {
            $('#skill' + skillindexString + 'lv').append($('<option>').html("Lv" + (i + 1)).val(i));
        }
    });
});